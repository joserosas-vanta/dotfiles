- name: Debug | Show important facts
  ansible.builtin.debug:
    msg:
      - "Nix Installed: {{ facts_nix_installed }}"
      - "Home Manager Installed: {{ facts_home_manager_installed }}"
      - "Bash Config Installed: {{ facts_bash_config_installed }}"
      - "Zsh Config Installed: {{ facts_zsh_config_installed }}"
      - "1Password Installed: {{ facts_op_installed }}"
  tags:
    - always

- name: Debug | Show current Ansible user
  ansible.builtin.debug:
    msg: "Ansible is using the user: {{ ansible_user }}"
  tags:
    - always

- name: Install Nix package manager in multi-user mode
  ansible.builtin.shell: |
    sh <(curl -L https://nixos.org/nix/install) --daemon
  args:
    creates: /nix/var/nix/profiles/default
  when: not facts_nix_installed
  tags:
    - nix
    - bootstrap
    - system
    - setup

- name: system setup | nix | add home-manager channel
  shell: nix-channel --add https://github.com/nix-community/home-manager/archive/release-24.05.tar.gz home-manager
  become_user: "{{ host_user }}"
  when: not facts_bash_config_installed or not facts_zsh_config_installed or facts_home_manager_installed
  tags:
    - nix
    - home-manager

- name: system setup | nix | update nix channels
  shell: nix-channel --update
  become_user: "{{ host_user }}"
  when: not facts_bash_config_installed or not facts_zsh_config_installed
  tags:
    - nix
    - home-manager

- name: system setup | nix | install home-manager into profile
  shell: nix-env -iA nixpkgs.home-manager
  become_user: "{{ host_user }}"
  when: not facts_bash_config_installed or not facts_zsh_config_installed or facts_home_manager_installed
  tags:
    - nix
    - home-manager

# Verify and set fact for home-manager installation
- name: Verify Home Manager installation
  ansible.builtin.command: home-manager --version
  become_user: "{{ host_user }}"
  register: home_manager_check
  changed_when: false
  failed_when: home_manager_check.rc != 0
  tags:
    - nix
    - home-manager

- name: Set Home Manager Installed Fact
  ansible.builtin.set_fact:
    facts_home_manager_installed: true
  when: home_manager_check.rc == 0
  tags:
    - nix
    - home-manager

# - name: system setup | nix | create .config/nixpkgs directory for home manager config
#   file:
#     path: "{{ ansible_user_dir }}/.config/home-manager"
#     state: directory
#     owner: "{{ host_user }}"
#     group: "{{ host_user }}"
#     # permissions so home-manager can write to it
#     mode: '0755'
#   tags:
#     - nix
#     - home-manager
#
# - name: system setup | nix | copy home-manager configuration file
#   copy:
#     src: "{{ host_user }}/home.nix"
#     dest: "{{ ansible_user_dir }}/.config/home-manager/home.nix"
#     owner: "{{ host_user }}"
#     group: "{{ host_user }}"
#     mode: '0644'
#   tags:
#     - nix
#     - home-manager
#     - packages
#
# - name: system setup | nix | install packages via home-manager
#   shell: "sudo -i -u {{ host_user }} home-manager switch -f /home/sillypoise/.config/home-manager/home.nix"
#   tags:
#     - nix
#     - home-manager
#     - packages
#
# - name: system setup | nix | update nix channels
#   shell: nix-channel --update
#   tags:
#     - nix
#     - home-manager
#     - update
#
# - name: system setup | nix | update home-manager packages
#   shell: "sudo -i -u {{ host_user }} home-manager switch -b backup"
#   tags:
#     - nix
#     - home-manager
#     - packages
#     - update
