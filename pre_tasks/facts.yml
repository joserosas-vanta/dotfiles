---
# Debug the current Ansible user and environment user
- name: Debug | Show current Ansible user
  ansible.builtin.debug:
    msg: "Ansible is using the user: {{ ansible_user }}"

- name: Debug | Show environment user from ansible_env
  ansible.builtin.debug:
    msg: "The environment user is: {{ ansible_env['USER'] }}"

# Register Current User if Undefined
- name: Register Current User if Undefined
  ansible.builtin.set_fact:
    host_user: "{{ host_user }}"
  tags:
    - always

# Detect 1Password CLI installation
- name: Detect 1Password CLI
  ansible.builtin.command:
    cmd: which op
  changed_when: false
  failed_when: false
  register: op_detection
  tags:
    - always

- name: Set 1Password Installed Status
  ansible.builtin.set_fact:
    facts_op_installed: "{{ op_detection.rc == 0 }}"
  tags:
    - always

# Detect Nix installation
- name: Detect Nix Installation
  ansible.builtin.command:
    cmd: which nix
  changed_when: false
  failed_when: false
  register: nix_detection
  tags:
    - always

- name: Debug | Show Nix detection result
  ansible.builtin.debug:
    var: nix_detection
  tags:
    - always

- name: Set Nix Installed Status
  ansible.builtin.set_fact:
    facts_nix_installed: "{{ nix_detection.rc == 0 }}"
  tags:
    - always

# Detect Zsh installation
- name: Detect Zsh Installation
  ansible.builtin.command:
    cmd: which zsh
  changed_when: false
  failed_when: false
  register: zsh_detection
  tags:
    - always

- name: Set Zsh Installed Status
  ansible.builtin.set_fact:
    facts_zsh_installed: "{{ zsh_detection.rc == 0 }}"
  tags:
    - always

# Detect sillypoise User
- name: Detect sillypoise User
  ansible.builtin.command:
    cmd: id -u sillypoise
  changed_when: false
  failed_when: false
  register: sillypoise_user_detection
  tags:
    - always

- name: Set sillypoise User Existence Status
  ansible.builtin.set_fact:
    facts_sillypoise_exists: "{{ sillypoise_user_detection.rc == 0 }}"
  tags:
    - always

# Detect flubber User
- name: Detect flubber User
  ansible.builtin.command:
    cmd: id -u flubber
  changed_when: false
  failed_when: false
  register: flubber_user_detection
  tags:
    - always

- name: Set flubber User Existence Status
  ansible.builtin.set_fact:
    facts_flubber_exists: "{{ flubber_user_detection.rc == 0 }}"
  tags:
    - always
