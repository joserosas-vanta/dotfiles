---
# Initialize facts dictionary if it doesn't exist
- name: Initialize facts dictionary
  ansible.builtin.set_fact:
    facts: {}
  when: facts is not defined
  tags:
    - always

# Initialize tools and users dictionaries if not present
- name: Initialize facts.tools dictionary
  ansible.builtin.set_fact:
    facts:
      tools: {}
  when: facts.tools is not defined
  tags:
    - always

- name: Initialize facts.users dictionary
  ansible.builtin.set_fact:
    facts:
      users: {}
  when: facts.users is not defined
  tags:
    - always

# Detect 1Password CLI installation status
- name: Detect 1Password CLI
  ansible.builtin.command:
    cmd: which op
  changed_when: false
  failed_when: false
  register: op_detection
  tags:
    - always

- name: Set 1Password Installed Status
  ansible.builtin.set_fact:
    facts:
      tools: "{{ facts.tools | combine({'op_installed': op_detection.rc == 0}) }}"
  tags:
    - always

# Detect Nix installation status
- name: Detect Nix Installation
  ansible.builtin.command:
    cmd: which nix
  changed_when: false
  failed_when: false
  register: nix_detection
  tags:
    - always

- name: Set Nix Installed Status
  ansible.builtin.set_fact:
    facts:
      tools: "{{ facts.tools | combine({'nix_installed': nix_detection.rc == 0}) }}"
  tags:
    - always

# Detect Zsh installation status
- name: Detect Zsh Installation
  ansible.builtin.command:
    cmd: which zsh
  changed_when: false
  failed_when: false
  register: zsh_detection
  tags:
    - always

- name: Set Zsh Installed Status
  ansible.builtin.set_fact:
    facts:
      tools: "{{ facts.tools | combine({'zsh_installed': zsh_detection.rc == 0}) }}"
  tags:
    - always

# Check for the existence of the `sillypoise` user
- name: Detect sillypoise User
  ansible.builtin.command:
    cmd: id -u sillypoise
  changed_when: false
  failed_when: false
  register: sillypoise_user_detection
  tags:
    - always

- name: Set sillypoise User Existence Status
  ansible.builtin.set_fact:
    facts:
      users: "{{ facts.users | combine({'sillypoise_exists': sillypoise_user_detection.rc == 0}) }}"
  tags:
    - always

# Check for the existence of the `flubber` user
- name: Detect flubber User
  ansible.builtin.command:
    cmd: id -u flubber
  changed_when: false
  failed_when: false
  register: flubber_user_detection
  tags:
    - always

- name: Set flubber User Existence Status
  ansible.builtin.set_fact:
    facts:
      users: "{{ facts.users | combine({'flubber_exists': flubber_user_detection.rc == 0}) }}"
  tags:
    - always

- name: Debug | Show all facts
  ansible.builtin.debug:
    var: facts
  tags:
    - always

